{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/React/onone/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./images/logo.svg\";\nimport './App.css';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIfLoggedIn = async () => {\n      let o = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          user_id: this.state.user_id\n        })\n      };\n      const response = await fetch('/isLoggedIn', o);\n      const {\n        status,\n        data\n      } = await response.json();\n\n      if (status == 'ok') {\n        if (data) {\n          this.updateAppState(data.username, data.user_id);\n        } else {\n          this.updateAppState('', '');\n        }\n      }\n    };\n\n    this.updateAppState = (username, user_id) => {\n      this.setState({\n        username: username,\n        user_id: user_id\n      });\n    };\n\n    this.logout = () => {\n      this.checkIfLoggedIn();\n    };\n\n    this.renderOptions = () => {\n      let themeButton = '';\n\n      if (this.state.theme == 'white') {\n        themeButton = /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.setTheme('dark'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-palette\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 6\n          }\n        }), \" Dark theme\");\n      } else {\n        themeButton = /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.setTheme('white'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-palette\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 6\n          }\n        }), \" White theme\");\n      }\n\n      let logout = /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-sign-out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }\n      }), \" Logout\");\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        className: \"header__actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        key: \"left\",\n        title: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-users-cog\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 39\n          }\n        }),\n        variant: \"light\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, this.state.username ? logout : '', themeButton));\n    };\n\n    this.state = {\n      username: '',\n      user_id: '',\n      theme: localStorage.getItem('theme') ? localStorage.getItem('theme') : 'white'\n    };\n    this.checkIfLoggedIn = this.checkIfLoggedIn.bind(this);\n    this.logout = this.logout.bind(this);\n    this.renderOptions = this.renderOptions.bind(this);\n    this.renderStyling = this.renderStyling.bind(this);\n    this.setTheme = this.setTheme.bind(this);\n    this.updateAppState = this.updateAppState.bind(this);\n  }\n\n  renderStyling() {\n    let background = \"\";\n    let color = \"\";\n\n    switch (this.state.theme) {\n      case 'white':\n        background = \"#fff\";\n        color = \"\";\n        break;\n\n      case 'dark':\n        background = \"#212224\";\n        color = \"#fff\";\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      background: background,\n      color: color\n    };\n  }\n\n  setTheme(newTheme) {\n    this.setState({\n      theme: newTheme\n    }, () => {\n      localStorage.setItem('theme', newTheme);\n    });\n  }\n\n  componentDidMount() {\n    this.checkIfLoggedIn();\n  }\n\n  render() {\n    const computedScreen = this.state.username ? /*#__PURE__*/React.createElement(Main, {\n      username: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      username: this.state.username,\n      checkIfLoggedIn: this.checkIfLoggedIn,\n      updateAppState: this.updateAppState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 90\n      }\n    });\n    const options = this.renderOptions();\n    const styling = this.renderStyling();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: styling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"logo__contain\",\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"logo__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, \"onOne\")), options), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, computedScreen), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mario/Desktop/React/onone/client/src/App.js"],"names":["React","Component","Login","Main","Footer","Dropdown","DropdownButton","App","constructor","props","checkIfLoggedIn","o","method","headers","body","JSON","stringify","username","state","user_id","response","fetch","status","data","json","updateAppState","setState","logout","renderOptions","themeButton","theme","setTheme","localStorage","getItem","bind","renderStyling","background","color","newTheme","setItem","componentDidMount","render","computedScreen","options","styling","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport logo from './images/logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tuser_id: '',\n\t\t\ttheme: localStorage.getItem('theme') ? localStorage.getItem('theme') : 'white'\n\t\t}\n\t\tthis.checkIfLoggedIn = this.checkIfLoggedIn.bind(this)\n\t\tthis.logout = this.logout.bind(this)\n\t\tthis.renderOptions = this.renderOptions.bind(this)\n\t\tthis.renderStyling = this.renderStyling.bind(this)\n\t\tthis.setTheme = this.setTheme.bind(this)\n\t\tthis.updateAppState = this.updateAppState.bind(this)\n\t}\n\tcheckIfLoggedIn = async () => {\n\t\tlet o = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ username: this.state.username,user_id: this.state.user_id })\n\t\t};\n\t\tconst response = await fetch('/isLoggedIn', o);\n\t\tconst {status,data} = await response.json();\n\t\tif(status == 'ok'){\n\t\t\tif(data){\n\t\t\t\tthis.updateAppState(data.username,data.user_id);\n\t\t\t}else{\n\t\t\t\tthis.updateAppState('','');\n\t\t\t}\n\t\t}\n\t}\n\tupdateAppState = (username,user_id) => {\n\t\tthis.setState({\n\t\t\tusername : username,\n\t\t\tuser_id : user_id\n\t\t})\n\t}\n\tlogout = () => {\n\t\tthis.checkIfLoggedIn();\n\t}\n\trenderOptions = () => {\n\t\tlet themeButton = '';\n\t\tif (this.state.theme == 'white') {\n\t\t\tthemeButton = (\n\t\t\t\t<Dropdown.Item onClick={ () => this.setTheme('dark')}>\n\t\t\t\t\t<i className=\"fa fa-palette\"></i> Dark theme\n\t\t\t\t</Dropdown.Item>\n\t\t\t);\n\t\t} else {\n\t\t\tthemeButton = (\n\t\t\t\t<Dropdown.Item onClick={ () => this.setTheme('white')}>\n\t\t\t\t\t<i className=\"fa fa-palette\"></i> White theme\n\t\t\t\t</Dropdown.Item>\n\t\t\t);\n\t\t}\n\t\tlet logout = (\n\t\t\t<Dropdown.Item onClick={this.logout}>\n\t\t\t\t<i className=\"fa fa-sign-out\"></i> Logout\n\t\t\t</Dropdown.Item>\n\t\t);\n\t\treturn(\n\t\t\t<Dropdown className=\"header__actions\">\n\t\t\t\t<DropdownButton key=\"left\" title={<i className=\"fas fa-users-cog\"></i>} variant=\"light\" id=\"dropdown-basic\">\n\t\t\t\t\t{ this.state.username ? logout : '' }\n\t\t\t\t\t{ themeButton }\n\t\t\t\t</DropdownButton>\n\t\t\t</Dropdown>\n\t\t)\n\t}\n\trenderStyling(){\n\t\tlet background = \"\";\n\t\tlet color = \"\";\n\t\tswitch (this.state.theme) {\n\t\t\tcase 'white':\n\t\t\t\tbackground = \"#fff\";\n\t\t\t\tcolor = \"\";\n\t\t\t\tbreak;\n\t\t\tcase 'dark':\n\t\t\t\tbackground = \"#212224\";\n\t\t\t\tcolor = \"#fff\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn({\n\t\t\tbackground:background,\n\t\t\tcolor:color\n\t\t})\n\t}\n\tsetTheme(newTheme){\n\t\tthis.setState({\n\t\t\ttheme:newTheme\n\t\t}, () => {\n\t\t\tlocalStorage.setItem('theme',newTheme)\n\t\t})\n\t}\n\tcomponentDidMount(){\n\t\tthis.checkIfLoggedIn();\n\t}\n\trender() {\n\t\tconst computedScreen = this.state.username ? <Main username={this.state.username} /> : <Login username={this.state.username} checkIfLoggedIn={this.checkIfLoggedIn} updateAppState={this.updateAppState} />;\n\t\tconst options = this.renderOptions();\n\t\tconst styling = this.renderStyling();\n\t\treturn (\n\t\t\t<div className=\"App\" style={ styling }>\n\t\t\t\t<header className=\"header\">\n\t\t\t\t\t<a className=\"logo__contain\" href=\"/\">\n\t\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t\t\t<span className=\"logo__text\">onOne</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t{ options }\n\t\t\t\t</header>\n\t\t\t\t<div>\n\t\t\t\t\t{ computedScreen }\n\t\t\t\t</div>\n\t\t\t\t<Footer></Footer>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}