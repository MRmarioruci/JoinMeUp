{"ast":null,"code":"var _jsxFileName = \"/home/mario/Desktop/React/onone/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./images/logo.svg\";\nimport './App.css';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIfLoggedIn = () => {\n      let username = localStorage.getItem('username');\n      this.setState({\n        username: username\n      });\n    };\n\n    this.logout = () => {\n      localStorage.removeItem('username');\n      this.checkIfLoggedIn();\n    };\n\n    this.renderOptions = () => {\n      let themeButton = '';\n\n      if (this.state.theme == 'white') {\n        themeButton = /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.setTheme('dark'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 18\n          }\n        }, \"Dark theme\");\n      } else {\n        themeButton = /*#__PURE__*/React.createElement(Dropdown.Item, {\n          onClick: () => this.setTheme('white'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }\n        }, \"White theme\");\n      }\n\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        className: \"header__actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        key: \"left\",\n        title: /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-users-cog\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 39\n          }\n        }),\n        variant: \"light\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }\n      }, \"Logout\")));\n    };\n\n    this.state = {\n      username: false,\n      theme: localStorage.getItem('theme') ? localStorage.getItem('theme') : 'white'\n    };\n    this.checkIfLoggedIn = this.checkIfLoggedIn.bind(this);\n    this.logout = this.logout.bind(this);\n    this.renderOptions = this.renderOptions.bind(this);\n    this.renderStyling = this.renderStyling.bind(this);\n    this.setTheme = this.setTheme.bind(this);\n  }\n\n  renderStyling() {\n    let background = \"\";\n    let color = \"\";\n\n    switch (this.state.theme) {\n      case 'white':\n        background = \"#fff\";\n        color = \"\";\n        break;\n\n      case 'dark':\n        background = \"#000\";\n        color = \"#fff\";\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      background: background,\n      color: color\n    };\n  }\n\n  setTheme(newTheme) {\n    this.setState({\n      theme: newTheme\n    }, () => {\n      localStorage.setItem('theme', newTheme);\n    });\n  }\n\n  componentDidMount() {\n    this.checkIfLoggedIn();\n  }\n\n  render() {\n    const computedScreen = this.state.username ? /*#__PURE__*/React.createElement(Main, {\n      username: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      checkIfLoggedIn: this.checkIfLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 90\n      }\n    });\n    const options = this.state.username ? this.renderOptions() : '';\n    const styling = this.renderStyling();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: styling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo__contain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"logo__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, \"onOne\")), options), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, computedScreen), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mario/Desktop/React/onone/src/App.js"],"names":["React","Component","Login","Main","Footer","Dropdown","DropdownButton","App","constructor","props","checkIfLoggedIn","username","localStorage","getItem","setState","logout","removeItem","renderOptions","themeButton","state","theme","setTheme","bind","renderStyling","background","color","newTheme","setItem","componentDidMount","render","computedScreen","options","styling","logo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport logo from './images/logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tusername: false,\n\t\t\ttheme: localStorage.getItem('theme') ? localStorage.getItem('theme') : 'white'\n\t\t}\n\t\tthis.checkIfLoggedIn = this.checkIfLoggedIn.bind(this)\n\t\tthis.logout = this.logout.bind(this)\n\t\tthis.renderOptions = this.renderOptions.bind(this)\n\t\tthis.renderStyling = this.renderStyling.bind(this)\n\t\tthis.setTheme = this.setTheme.bind(this)\n\t}\n\tcheckIfLoggedIn = () => {\n\t\tlet username = localStorage.getItem('username');\n\t\tthis.setState({\n\t\t\tusername : username\n\t\t})\n\t}\n\tlogout = () => {\n\t\tlocalStorage.removeItem('username');\n\t\tthis.checkIfLoggedIn();\n\t}\n\trenderOptions = () => {\n\t\tlet themeButton = '';\n\t\tif (this.state.theme == 'white') {\n\t\t\tthemeButton = <Dropdown.Item onClick={ () => this.setTheme('dark')}>Dark theme</Dropdown.Item>;\n\t\t  } else {\n\t\t\tthemeButton = \t\t\t\t\t<Dropdown.Item onClick={ () => this.setTheme('white')}>White theme</Dropdown.Item>\n\t\t\t;\n\t\t  }\n\t\treturn(\n\t\t\t<Dropdown className=\"header__actions\">\n\t\t\t\t<DropdownButton key=\"left\" title={<i className=\"fas fa-users-cog\"></i>} variant=\"light\" id=\"dropdown-basic\">\n\t\t\t\t\t<Dropdown.Item onClick={this.logout}>Logout</Dropdown.Item>\n\t\t\t\t</DropdownButton>\n\t\t\t</Dropdown>\n\t\t)\n\t}\n\trenderStyling(){\n\t\tlet background = \"\";\n\t\tlet color = \"\";\n\t\tswitch (this.state.theme) {\n\t\t\tcase 'white':\n\t\t\t\tbackground = \"#fff\";\n\t\t\t\tcolor = \"\";\n\t\t\t\tbreak;\n\t\t\tcase 'dark':\n\t\t\t\tbackground = \"#000\";\n\t\t\t\tcolor = \"#fff\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn({\n\t\t\tbackground:background,\n\t\t\tcolor:color\n\t\t})\n\t}\n\tsetTheme(newTheme){\n\t\tthis.setState({\n\t\t\ttheme:newTheme\n\t\t}, () => {\n\t\t\tlocalStorage.setItem('theme',newTheme)\n\t\t})\n\t}\n\tcomponentDidMount(){\n\t\tthis.checkIfLoggedIn();\n\t}\n\trender() {\n\t\tconst computedScreen = this.state.username ? <Main username={this.state.username} /> : <Login checkIfLoggedIn={this.checkIfLoggedIn} />;\n\t\tconst options = this.state.username ? this.renderOptions() : '';\n\t\tconst styling = this.renderStyling();\n\t\treturn (\n\t\t\t<div className=\"App\" style={ styling }>\n\t\t\t\t<header className=\"header\">\n\t\t\t\t\t<div className=\"logo__contain\">\n\t\t\t\t\t\t<img src={logo} className=\"logo\" />\n\t\t\t\t\t\t<span className=\"logo__text\">onOne</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ options }\n\t\t\t\t</header>\n\t\t\t\t<div>\n\t\t\t\t\t{ computedScreen }\n\t\t\t\t</div>\n\t\t\t\t<Footer></Footer>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}